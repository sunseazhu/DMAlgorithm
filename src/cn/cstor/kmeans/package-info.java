/**
 * 	该包主要是k-means方法的操作。
 *  <p>
 *k-means算法<br>
 * 		1. 接受输入量 k:<br>
 * 		2. 然后将n个数据对象划分为 k个聚类以便使得所获得的聚类满足：同一聚类中的对象相似度较高；而不同聚类中的对象相似度较小。<br>
 * 		3. 聚类相似度是利用各聚类中对象的均值所获得一个“中心对象”（引力中心）来进行计算的。<br>
 * 		4. k个聚类具有以下特点：各聚类本身尽可能的紧凑，而各聚类之间尽可能的分开。　<br>
 * 
 *<p> 
 *k-means算法的工作过程说明如下：<br>
 * 		1. 首先从n个数据对象任意选择k个对象作为初始聚类中心；<br>
 * 		2. 而对于所剩下其它对象，则根据它们与这些聚类中心的相似度（距离），分别将它们分配给与其最相似的（聚类中心所代表的）聚类；<br>
 * 		3. 然后再计算每个所获新聚类的聚类中心（该聚类中所有对象的均值）；不断重复这一过程直到标准测度函数开始收敛为止。<br>
 * 		一般都采用均方差作为标准测度函数。<br>
 *
 *<p>
 *k-means算法基本步骤：<br>
 *		（1） 从 n个数据对象任意选择 k 个对象作为初始聚类中心；<br>
 *		（2） 根据每个聚类对象的均值（中心对象），计算每个对象与这些中心对象的距离；并根据最小距离重新对相应对象进行划分；<br>
 *		（3） 重新计算每个（有变化）聚类的均值（中心对象）；<br>
 *		（4） 计算标准测度函数，当满足一定条件，如函数收敛时，则算法终止；如果条件不满足则回到步骤（2），不断重复直到标准测度函数开始收敛为止。（一般都采用均方差作为标准测度函数。）<br>
 *
 *<p>
 *本测试中测试背景介绍：<br>
 *	一共有七个类：<br>
 *		General.java代表武将对象,<br> 
 *		Distance.java距离类计算各个武将到中心武将之间的距离, <br>
 *		Cluster.java聚类对象包含一个中心武将和该聚类中所有武将,<br>
 *		Kmeans.java核心的聚类算法类, <br>
 *		Tool.java工具类用于转换武将的星级为数字等操作,<br>
 *		TestKmeans.java测试类即入口文件, <br>
 *		DomParser.java用于读取xml中的681个武将。<br>
 *<p>具体思路：迭代的过程<br>
 *		先从general.xml文件中读取681个武将，<br>
 *		然后随机选取初始类中心，计算各个武将到中心武将的距离，根据最小的距离进行聚类，然后重新根据平均值新的聚类的类中心，重新计算各个武将到新的中心武将的距离，直到更新后的聚类与原来的聚类包含的武将不再改变，即收敛时结束。<br>
 	
 *	<p>Company: cstor	<br>
 *	
 *	@author zhuxy
 *	2016年7月19日 下午2:05:05
 */
package cn.cstor.kmeans;